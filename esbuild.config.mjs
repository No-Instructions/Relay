import esbuild from "esbuild";
import process from "process";
import esbuildSvelte from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";
import builtins from "builtin-modules";
import { execSync } from "child_process";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const gitTag = execSync("git describe --tags --always", {
	encoding: "utf8",
}).trim();
const healthUrl = `"https://api.dnup.org/health?verion=${gitTag}"`;
console.log("git tag:", gitTag);
console.log("health URL", healthUrl);

const watch = process.argv[2] === "watch";
const debug = process.argv[2] === "debug" || process.argv[2] === "watch";
const out = process.argv[3] || ".";

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	plugins: [
		esbuildSvelte({
			compilerOptions: { css: true },
			preprocess: sveltePreprocess(),
		}),
	],

	target: "es2018",
	logLevel: "info",
	sourcemap: debug ? "inline" : false,
	define: {
		BUILD_TYPE: debug ? '"debug"' : '"prod"',
		GIT_TAG: `"${gitTag}"`,
		HEALTH_URL: healthUrl,
	},
	treeShaking: true,
	outfile: out + "/main.js",
});

if (watch) {
	await context.watch();
} else {
	await context.rebuild();
	process.exit(0);
}
